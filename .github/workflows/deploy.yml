name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # Use system Maven instead of wrapper
      - name: Build JAR
        run: mvn clean package -DskipTests

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          passphrase: ${{ secrets.EC2_SSH_PASSPHRASE }}
          source: "target/*.jar"
          target: "/home/ec2-user/${{ github.event.repository.name }}/"

      - name: Deploy Docker container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          passphrase: ${{ secrets.EC2_SSH_PASSPHRASE }}
          script: |
            cd ${{ github.event.repository.name }}
            cat <<EOF > Dockerfile
            FROM openjdk:21-jdk
            WORKDIR /app
            COPY *.jar app.jar
            ENTRYPOINT ["java", "-jar", "app.jar"]
            EXPOSE 8080
            EOF

            docker build -t ${{ github.event.repository.name }} .
            docker rm -f ${{ github.event.repository.name }} || true

            # Choose port based on service
            if [ "${{ github.event.repository.name }}" = "route-schedule-service" ]; then
              PORT=8081
            else
              PORT=8082
            fi

            docker run -d --name ${{ github.event.repository.name }} -p $PORT:8080 ${{ github.event.repository.name }}
